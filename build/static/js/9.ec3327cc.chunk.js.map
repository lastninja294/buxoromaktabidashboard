{"version":3,"sources":["../node_modules/antd/es/col/index.js","pages/profile/UserProfile/ChangePassword/index.js","pages/profile/UserProfile/index.js"],"names":["Col","ChangePassword","mutateAsync","usePostData","mutateAsync1","usePutData","Form","useForm","form","onFinish","values","password","oldPassword","then","adminName","res","message","success","resetFields","catch","err","error","className","initialValues","remember","onFinishFailed","errorInfo","console","log","IntlMessages","id","gutter","xs","md","Item","name","rules","required","placeholder","Password","getFieldValue","validator","rule","value","Promise","reject","resolve","shouldUpdate","type","htmlType","UserProfile","TabPane","Tabs","defaultActiveKey","tabPosition","tab"],"mappings":"+LACeA,E,OAAG,E,mDCqGHC,EAhGQ,WACrB,IAAOC,EAAeC,YAAY,gBAA3BD,YACaE,EAAgBC,YAAW,UAAxCH,YAEP,EAAeI,IAAKC,UAAbC,EAAsB,iBAAlB,GAELC,EAAQ,iDAAG,WAAOC,GAAM,2FACtBR,EAAY,CAChBS,SAAUD,EAAOE,cAEhBC,MAAK,WACJT,EAAa,CACXU,UAAWJ,EAAOI,UAClBH,SAAUD,EAAOC,WAEhBE,MAAK,SAACE,GACLC,IAAQC,QAAQF,EAAIC,SACpBR,EAAKU,aACP,IACCC,OAAM,SAACC,GACNJ,IAAQK,MAAMD,EAAIJ,QACpB,GACJ,IACCG,OAAM,SAACC,GAAG,OAAKJ,IAAQK,MAAMD,EAAIJ,QAAQ,IAAE,KAAD,sCAC9C,gBAlBa,sCAwBd,OACE,eAAC,IAAI,CACHM,UAAU,oBACVC,cAAe,CAACC,UAAU,GAC1Bf,SAAUA,EACVgB,eATmB,SAACC,GACtBC,QAAQC,IAAI,UAAWF,EACzB,EAOmC,UAC/B,oBAAIJ,UAAU,0BAAyB,SACrC,cAACO,EAAA,EAAY,CAACC,GAAG,iCAEnB,eAAC,IAAe,CAACC,OAAQ,GAAG,UAC1B,cAAC,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAG,SAClB,cAAC,IAAKC,KAAI,CACRC,KAAK,YACLC,MAAO,CAAC,CAACC,UAAU,EAAOrB,QAAS,gCAAgC,SACnE,cAAC,IAAK,CAACsB,YAAY,oBAGvB,cAAC,EAAG,CAACN,GAAI,GAAIC,GAAI,GAAG,SAClB,cAAC,IAAKC,KAAI,CACRC,KAAK,cACLC,MAAO,CACL,CAACC,UAAU,EAAMrB,QAAS,qCAC1B,SACF,cAAC,IAAMuB,SAAQ,CAACD,YAAY,uBAGhC,cAAC,EAAG,CAACN,GAAI,GAAIC,GAAI,GAAG,SAClB,cAAC,IAAKC,KAAI,CACRC,KAAK,WACLC,MAAO,CACL,CAACC,UAAU,EAAMrB,QAAS,oCAC1B,SACF,cAAC,IAAMuB,SAAQ,CAACD,YAAY,2BAGhC,cAAC,EAAG,CAACN,GAAI,GAAIC,GAAI,GAAG,SAClB,cAAC,IAAKC,KAAI,CACRC,KAAK,kBACLC,MAAO,CACL,CAACC,UAAU,EAAMrB,QAAS,uCAC1B,gBAAEwB,EAAa,EAAbA,cAAa,MAAO,CACpBC,UAAS,SAACC,EAAMC,GACd,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OACb,uDAHOD,QAAQE,SAKnB,EACD,GACD,SACF,cAAC,IAAMP,SAAQ,CAACD,YAAY,6BAGhC,cAAC,EAAG,CAACN,GAAI,GAAIC,GAAI,GAAG,SAClB,cAAC,IAAKC,KAAI,CAACa,cAAY,EAACzB,UAAU,yBAAwB,SACxD,cAAC,IAAM,CAAC0B,KAAK,UAAUC,SAAS,SAAQ,mCAQpD,E,QC/DeC,UAzBK,WAClB,IAAMC,EAAUC,IAAKD,QACrB,OACE,qBAAK7B,UAAU,yBAAwB,SACrC,cAAC,IAAI,CACHA,UAAU,oBACV+B,iBAAiB,IACjBC,YAAY,OAAM,SAClB,cAACH,EAAO,CACNI,IACE,uBAAMjC,UAAU,oBAAmB,UACjC,cAAC,IAAU,CAACA,UAAU,SACtB,+BACE,cAACO,EAAA,EAAY,CAACC,GAAG,oCAGtB,SAED,cAAC,EAAc,KADX,QAMd,C","file":"static/js/9.ec3327cc.chunk.js","sourcesContent":["import { Col } from '../grid';\nexport default Col;","import React from 'react';\r\nimport {Button, Col, Form, Input, message} from 'antd';\r\nimport {AppRowContainer} from '../../../../@crema';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport {usePostData, usePutData} from 'hooks';\r\n\r\nconst ChangePassword = () => {\r\n  const {mutateAsync} = usePostData('admins/check');\r\n  const {mutateAsync: mutateAsync1} = usePutData('admins');\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = async (values) => {\r\n    await mutateAsync({\r\n      password: values.oldPassword,\r\n    })\r\n      .then(() => {\r\n        mutateAsync1({\r\n          adminName: values.adminName,\r\n          password: values.password,\r\n        })\r\n          .then((res) => {\r\n            message.success(res.message);\r\n            form.resetFields();\r\n          })\r\n          .catch((err) => {\r\n            message.error(err.message);\r\n          });\r\n      })\r\n      .catch((err) => message.error(err.message));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      className='user-profile-form'\r\n      initialValues={{remember: true}}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}>\r\n      <h3 className='user-profile-form-title'>\r\n        <IntlMessages id='userProfile.changePassword' />\r\n      </h3>\r\n      <AppRowContainer gutter={16}>\r\n        <Col xs={24} md={16}>\r\n          <Form.Item\r\n            name='adminName'\r\n            rules={[{required: false, message: 'Please input your new login'}]}>\r\n            <Input placeholder='Enter login' />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24} md={16}>\r\n          <Form.Item\r\n            name='oldPassword'\r\n            rules={[\r\n              {required: true, message: 'Please input your Enter Password'},\r\n            ]}>\r\n            <Input.Password placeholder='Enter password' />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24} md={16}>\r\n          <Form.Item\r\n            name='password'\r\n            rules={[\r\n              {required: true, message: 'Please input your New Password!'},\r\n            ]}>\r\n            <Input.Password placeholder='Enter new password' />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24} md={16}>\r\n          <Form.Item\r\n            name='confirmPassword'\r\n            rules={[\r\n              {required: true, message: 'Please input Your Confirm Password!'},\r\n              ({getFieldValue}) => ({\r\n                validator(rule, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(\r\n                    'The Confirm Password that you entered do not match!',\r\n                  );\r\n                },\r\n              }),\r\n            ]}>\r\n            <Input.Password placeholder='Confirm new password' />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24} md={24}>\r\n          <Form.Item shouldUpdate className='user-profile-group-btn'>\r\n            <Button type='primary' htmlType='submit'>\r\n              Save Changes\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n      </AppRowContainer>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React from 'react';\r\nimport './index.style.less';\r\nimport {Tabs} from 'antd';\r\n// import PersonalInfo from './PersonalInfo';\r\nimport ChangePassword from './ChangePassword';\r\n\r\n// import {HiUser} from 'react-icons/hi';\r\nimport {AiFillLock} from 'react-icons/ai';\r\n\r\n// import accountData from '../../../@crema/services/db/extraPages/account';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\n\r\nconst UserProfile = () => {\r\n  const TabPane = Tabs.TabPane;\r\n  return (\r\n    <div className='user-profile-container'>\r\n      <Tabs\r\n        className='user-profile-tabs'\r\n        defaultActiveKey='1'\r\n        tabPosition='left'>\r\n        <TabPane\r\n          tab={\r\n            <span className='user-profile-icon'>\r\n              <AiFillLock className='icon' />\r\n              <span>\r\n                <IntlMessages id='userProfile.changePassword' />\r\n              </span>\r\n            </span>\r\n          }\r\n          key='2'>\r\n          <ChangePassword />\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"sourceRoot":""}