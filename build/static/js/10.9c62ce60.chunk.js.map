{"version":3,"sources":["pages/dashboard/Components/Pagination/index.js","pages/dashboard/Components/Table/index.js","pages/dashboard/Components/FormElements/RichTextEditor/index.js","pages/dashboard/Components/ModalForm/components/CustomModal/customModal.module.scss","pages/dashboard/Components/Table/generate.js","pages/dashboard/Components/FormElements/FormInput/index.js","pages/dashboard/Components/FormElements/FormPhone/index.js","pages/dashboard/Components/FormElements/FormSelect/index.js","pages/dashboard/Components/FormElements/FormUpload/index.js","pages/dashboard/Components/FormElements/index.js","pages/dashboard/Components/ModalForm/components/ModalTabs/index.js","pages/dashboard/Components/ModalForm/components/ModalFields/index.js","pages/dashboard/Components/ModalForm/components/CustomModal/index.js","pages/dashboard/Components/ModalForm/components/GenerateModalForm/index.js","pages/dashboard/Components/ModalForm/index.js","pages/dashboard/admins/index.js"],"names":["PaginationForTable","total","history","useHistory","useState","location","search","split","map","e","page","setPage","size","setSize","useEffect","push","current","pageSize","showSizeChanger","onChange","cur","DynamicTable","routeForData","deleteKey","useGetData","data","isSuccess","refetch","mutateAsync","useDeleteData","visible","setVisible","tableLoading","setTableLoading","imageSrc","setImageSrc","columns","Object","keys","filter","element","length","elem","title","dataIndex","key","ellipse","width","align","render","text","onClick","style","cursor","forSort","join","color","toString","ellipsis","sort","a","b","fixed","record","direction","padding","onConfirm","id","find","includes","then","message","success","okText","cancelText","bordered","rowKey","dataSource","loading","scroll","y","pagination","Pagination","display","src","onError","error","preview","onVisibleChange","value","RichTextEditor","label","control","placeholder","name","defaultValue","others","EditorState","createWithContent","ContentState","createFromBlockArray","convertFromHTML","createEmpty","editorState","setEditorState","usePostData","uploadImageCallBack","file","FormData","append","imgUrl","fileUrl","catch","Promise","resolve","reject","link","console","log","field","ref","className","flexDirection","margin","toolbarOnHidden","onEditorStateChange","editorStyle","maxHeight","toolbar","options","inline","inDropdown","blockType","undefined","component","dropdownClassName","image","uploadCallback","alt","present","mandatory","defaultSize","height","previewImage","fontSize","module","exports","generateInitialValue","pageName","surname","experince","subjects","about","Uz","Ru","yup","shape","create","of","required","photo","nullable","price","desc","teacherId","adminName","password","fullname","year","university","points","status","FormInput","FormPhone","mask","inputProps","FormSelect","Option","Select","item","index","teacher_id","teacher_name","FormUpload","register","htmlFor","type","accept","FormElements","ModalTabs","isMultiNameArr","languageTabs","initialValue","TabPane","Tabs","tab","settab","isAllErrorLang","values","lang","isErr","nameValue","defaultActiveKey","activeKey","FrownOutlined","hidden","marginLeft","i","FormFields","remove","isMultiLanguage","isValue","isMultiValues","pushValue","indexOf","isNameValue","isNameArr","CustomModal","onCancel","footer","children","styles","GenerateModalForm","schema","onSubmit","isLoading","refFrom","useRef","useForm","resolver","yupResolver","handleSubmit","reset","errors","formState","useFieldArray","fields","click","memo","ModalForm","maxWidth","Admins","res","generate"],"mappings":"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","file":"static/js/10.9c62ce60.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Pagination} from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PaginationForTable({total}) {\r\n  const history = useHistory();\r\n\r\n  const [page, setPage] = useState(\r\n    history.location.search.split('&').map((e) => {\r\n      return +e.split('=')[1];\r\n    })[0] || 1,\r\n  );\r\n  const [size, setSize] = useState(\r\n    history.location.search.split('&').map((e) => {\r\n      return +e.split('=')[1];\r\n    })[1] || 10,\r\n  );\r\n\r\n  useEffect(() => {\r\n    history.push(`?page=${page}&size=${size}`);\r\n  }, []);\r\n\r\n  return (\r\n    <Pagination\r\n      current={page}\r\n      pageSize={size}\r\n      total={total}\r\n      showSizeChanger\r\n      onChange={(cur, pageSize) => {\r\n        history.push(`?page=${cur}&size=${pageSize}`);\r\n        if (size !== pageSize) {\r\n          setPage(1);\r\n          setSize(pageSize);\r\n          history.push(`?page=${1}&size=${pageSize}`);\r\n        } else {\r\n          setPage(cur);\r\n          setSize(pageSize);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PaginationForTable;\r\n\r\nPaginationForTable.propTypes = {\r\n  total: PropTypes.number,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {useGetData, useDeleteData} from 'hooks';\r\nimport {Table, Image, Tag, message, Space, Popconfirm} from 'antd';\r\nimport {BsImage} from 'react-icons/bs';\r\nimport {AiOutlineDelete, AiOutlineEdit} from 'react-icons/ai';\r\nimport PaginationForTable from '../Pagination';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DynamicTable = ({routeForData, deleteKey}) => {\r\n  const history = useHistory();\r\n\r\n  const {data, isSuccess, refetch} = useGetData(\r\n    `${routeForData}/${\r\n      history.location.search.split('?')[1]\r\n        ? history.location.search.split('?')[1]\r\n        : 'page=1&size=10'\r\n    }`,\r\n  );\r\n\r\n  const {mutateAsync} = useDeleteData(deleteKey);\r\n  const [visible, setVisible] = useState(false);\r\n  const [tableLoading, setTableLoading] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState('');\r\n\r\n  let columns = {};\r\n\r\n  if (isSuccess) {\r\n    columns = Object.keys(data?.data.data[0])\r\n      .map((e) => {\r\n        if (!(e.split('_').filter((element) => element === 'id').length > 0)) {\r\n          if (e.split('_').filter((elem) => elem === 'img').length > 0) {\r\n            return {\r\n              title: 'Img',\r\n              dataIndex: e,\r\n              key: 'img',\r\n              ellipse: true,\r\n              width: 50,\r\n              align: 'center',\r\n              render: (text) => {\r\n                return (\r\n                  <>\r\n                    <BsImage\r\n                      size={24}\r\n                      onClick={() => {\r\n                        setVisible(true);\r\n                        setImageSrc(text);\r\n                      }}\r\n                      style={{cursor: 'pointer'}}\r\n                    />\r\n                  </>\r\n                );\r\n              },\r\n              forSort: 1,\r\n            };\r\n          } else if (\r\n            e.split('_').filter((elem) => elem === 'status').length > 0\r\n          ) {\r\n            return {\r\n              title: e.split('_').join(' '),\r\n              dataIndex: e,\r\n              key: e,\r\n              forSort: 0,\r\n              width: 150,\r\n              render: (text) => {\r\n                if (text) {\r\n                  return <Tag color='green'>{text.toString()}</Tag>;\r\n                }\r\n                return <Tag color='red'>{text.toString()}</Tag>;\r\n              },\r\n            };\r\n          }\r\n          return {\r\n            title: e.split('_').join(' '),\r\n            dataIndex: e,\r\n            key: e,\r\n            width: 150,\r\n            forSort: 0,\r\n            ellipsis: true,\r\n          };\r\n        }\r\n      })\r\n      .filter((e) => e)\r\n      .sort((a, b) => a.forSort - b.forSort);\r\n    if (deleteKey !== 'users') {\r\n      columns.push({\r\n        title: 'Actions',\r\n        key: 'actions',\r\n        width: 120,\r\n        fixed: 'right',\r\n        render: (record) => {\r\n          return (\r\n            <>\r\n              <Space size={'middle'} direction='horizontal' align='center'>\r\n                <AiOutlineEdit\r\n                  size={28}\r\n                  style={{\r\n                    padding: '4px',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                />\r\n                <Popconfirm\r\n                  title={`Haqiqatdan ham o'chirishni xohlaysizmi?`}\r\n                  onConfirm={async () => {\r\n                    setTableLoading(true);\r\n                    mutateAsync({\r\n                      id: record[\r\n                        Object.keys(record).find((e) => {\r\n                          return e.includes('_id');\r\n                        })\r\n                      ],\r\n                    }).then(() => {\r\n                      message.success(\"Muvaffaqiyatli o'chirildi\");\r\n                      setTableLoading(false);\r\n                      refetch();\r\n                    });\r\n                  }}\r\n                  okText='Xa'\r\n                  cancelText={`Yo'q`}>\r\n                  <AiOutlineDelete\r\n                    size={28}\r\n                    style={{\r\n                      padding: '4px',\r\n                      cursor: 'pointer',\r\n                    }}\r\n                    color='#e91e63'\r\n                  />\r\n                </Popconfirm>\r\n              </Space>\r\n            </>\r\n          );\r\n        },\r\n      });\r\n    } else {\r\n      columns.push({\r\n        title: 'Actions',\r\n        key: 'actions',\r\n        width: 30,\r\n        fixed: 'right',\r\n        align: 'center',\r\n        render: (record) => {\r\n          return (\r\n            <>\r\n              <Space size={'middle'} direction='horizontal' align='center'>\r\n                <Popconfirm\r\n                  title={`Haqiqatdan ham o'chirishni xohlaysizmi?`}\r\n                  onConfirm={async () => {\r\n                    setTableLoading(true);\r\n                    mutateAsync({\r\n                      id: record[\r\n                        Object.keys(record).find((e) => {\r\n                          return e.includes('_id');\r\n                        })\r\n                      ],\r\n                    }).then(() => {\r\n                      message.success(\"Muvaffaqiyatli o'chirildi\");\r\n                      setTableLoading(false);\r\n                      refetch();\r\n                    });\r\n                  }}\r\n                  okText='Xa'\r\n                  cancelText={`Yo'q`}>\r\n                  <AiOutlineDelete\r\n                    size={28}\r\n                    style={{\r\n                      padding: '4px',\r\n                      cursor: 'pointer',\r\n                    }}\r\n                    color='#e91e63'\r\n                  />\r\n                </Popconfirm>\r\n              </Space>\r\n            </>\r\n          );\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isSuccess ? (\r\n        <Space size={'middle'} direction='vertical'>\r\n          <Table\r\n            bordered\r\n            rowKey={(record) => {\r\n              return record[Object.keys(record)[0]];\r\n            }}\r\n            columns={columns}\r\n            dataSource={data?.data?.data}\r\n            loading={tableLoading}\r\n            scroll={{\r\n              y: 400,\r\n            }}\r\n            ellipse={true}\r\n            pagination={false}\r\n          />\r\n          <PaginationForTable total={data?.data?.size || 100} />\r\n        </Space>\r\n      ) : (\r\n        'Loading'\r\n      )}\r\n      <Image\r\n        width={200}\r\n        style={{\r\n          display: 'none',\r\n        }}\r\n        src={imageSrc}\r\n        onError={() => {\r\n          visible ? message.error('Rasm aniqlanmadi!') : 'Hehe';\r\n        }}\r\n        preview={{\r\n          visible,\r\n          onVisibleChange: (value) => {\r\n            if (value === false) {\r\n              setImageSrc('');\r\n            }\r\n            setVisible(value);\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicTable;\r\n\r\nDynamicTable.propTypes = {\r\n  routeForData: PropTypes.string,\r\n  deleteKey: PropTypes.string,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Editor} from 'react-draft-wysiwyg';\r\nimport {EditorState, ContentState, convertFromHTML} from 'draft-js';\r\nimport {Controller} from 'react-hook-form';\r\nimport PropTypes from 'prop-types';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n// import DraftDefaultConfig from './config';\r\nimport './style.scss';\r\nimport {usePostData} from 'hooks';\r\n\r\nfunction RichTextEditor({\r\n  label = 'description',\r\n  control,\r\n  placeholder,\r\n  error,\r\n  name,\r\n  defaultValue = '',\r\n  ...others\r\n}) {\r\n  const [editorState, setEditorState] = useState(() =>\r\n    defaultValue\r\n      ? EditorState.createWithContent(\r\n          ContentState.createFromBlockArray(convertFromHTML(defaultValue)),\r\n        )\r\n      : EditorState.createEmpty(),\r\n  );\r\n\r\n  const {mutateAsync} = usePostData('files');\r\n\r\n  async function uploadImageCallBack(file) {\r\n    const data = new FormData();\r\n    data.append('file', file);\r\n    let imgUrl = '';\r\n    await mutateAsync(data)\r\n      .then((a) => {\r\n        imgUrl = a?.fileUrl;\r\n      })\r\n      .catch(() => {\r\n        imgUrl = '';\r\n      });\r\n    return new Promise((resolve, reject) => {\r\n      if (imgUrl.length > 0) {\r\n        resolve({\r\n          data: {\r\n            link: imgUrl,\r\n          },\r\n        });\r\n      } else {\r\n        reject('Xatolik');\r\n      }\r\n      console.log('bu ishladi');\r\n    });\r\n  }\r\n\r\n  function beztolk(ref) {\r\n    return ref;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Controller\r\n        control={control}\r\n        name={name}\r\n        defaultValue={editorState}\r\n        render={({field: {ref, ...others}}) => {\r\n          beztolk(ref);\r\n          return (\r\n            <div className='create-modal-form-box'>\r\n              <label\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  margin: '10px 0 0 0',\r\n                }}>\r\n                {label}\r\n                <Editor\r\n                  {...others}\r\n                  toolbarOnHidden\r\n                  editorState={editorState}\r\n                  onEditorStateChange={(e) => {\r\n                    setEditorState(e);\r\n                  }}\r\n                  placeholder={placeholder}\r\n                  editorStyle={{maxHeight: '320px'}}\r\n                  toolbar={{\r\n                    options: [\r\n                      'inline',\r\n                      'blockType',\r\n                      'fontSize',\r\n                      'fontFamily',\r\n                      'list',\r\n                      'textAlign',\r\n                      'image',\r\n                      'history',\r\n                    ],\r\n                    inline: {\r\n                      inDropdown: false,\r\n                      options: [\r\n                        'bold',\r\n                        'italic',\r\n                        'underline',\r\n                        'strikethrough',\r\n                        'superscript',\r\n                        'subscript',\r\n                      ],\r\n                    },\r\n                    blockType: {\r\n                      inDropdown: true,\r\n                      options: [\r\n                        'Normal',\r\n                        'H1',\r\n                        'H2',\r\n                        'H3',\r\n                        'H4',\r\n                        'H5',\r\n                        'H6',\r\n                        'Blockquote',\r\n                      ],\r\n                      className: undefined,\r\n                      component: undefined,\r\n                      dropdownClassName: undefined,\r\n                    },\r\n                    image: {\r\n                      uploadCallback: uploadImageCallBack,\r\n                      alt: {present: false, mandatory: false},\r\n                      defaultSize: {\r\n                        height: 'auto',\r\n                        width: 'auto',\r\n                      },\r\n                      previewImage: true,\r\n                    },\r\n                  }}\r\n                />\r\n              </label>\r\n            </div>\r\n          );\r\n        }}\r\n        {...others}\r\n      />\r\n      {error && (\r\n        <p style={{fontSize: '12px', color: 'red'}}>{error?.message}</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RichTextEditor;\r\n\r\nRichTextEditor.propTypes = {\r\n  control: PropTypes.any,\r\n  placeholder: PropTypes.string,\r\n  error: PropTypes.any,\r\n  name: PropTypes.any,\r\n  defaultValue: PropTypes.any,\r\n  label: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"custom-modal\":\"customModal_custom-modal__15TAo\",\"custom-modal__wrapper\":\"customModal_custom-modal__wrapper__30YPs\",\"custom-modal__wrapper__header\":\"customModal_custom-modal__wrapper__header__NlQKR\",\"title\":\"customModal_title__1AHPS\",\"button\":\"customModal_button__1NBxo\",\"custom-modal__wrapper__body\":\"customModal_custom-modal__wrapper__body__BH6Dq\",\"custom-modal__wrapper__footer\":\"customModal_custom-modal__wrapper__footer__3ueS8\"};","import * as yup from 'yup';\r\n\r\nfunction generateInitialValue(pageName) {\r\n  if (pageName === 'teachers') {\r\n    return [\r\n      {\r\n        name: '',\r\n        surname: '',\r\n        experince: '',\r\n        subjects: '',\r\n        about: {\r\n          Uz: '',\r\n          Ru: '',\r\n        },\r\n        imgUrl: [],\r\n      },\r\n      yup.object().shape({\r\n        create: yup.array().of(\r\n          yup.object().shape({\r\n            name: yup.string().required(\"*Maydon to'ldirilishi kerak\"),\r\n            surname: yup.string().required(\"*Maydon to'ldirilishi kerak\"),\r\n            experince: yup.string().required(\"*Maydon to'ldirilishi kerak\"),\r\n            subjects: yup.string().required(\"*Maydon to'ldirilishi kerak\"),\r\n            about: yup.object().shape({\r\n              Uz: yup.object(),\r\n              Ru: yup.object(),\r\n            }),\r\n            photo: yup.array().nullable(),\r\n          }),\r\n        ),\r\n      }),\r\n    ];\r\n  } else if (pageName === 'news') {\r\n    return [\r\n      {\r\n        imgUrl: [],\r\n        data: {\r\n          Uz: '',\r\n          Ru: '',\r\n        },\r\n      },\r\n      yup.object().shape({\r\n        create: yup.array().of(\r\n          yup.object().shape({\r\n            imgUrl: yup.array().nullable(),\r\n            data: yup.object().shape({\r\n              Uz: yup.object(),\r\n              Ru: yup.object(),\r\n            }),\r\n          }),\r\n        ),\r\n      }),\r\n    ];\r\n  } else if (pageName === 'courses') {\r\n    return [\r\n      {\r\n        name: '',\r\n        price: '',\r\n        desc: {\r\n          Uz: '',\r\n          Ru: '',\r\n        },\r\n        imgUrl: [],\r\n        teacherId: 'select',\r\n      },\r\n      yup.object().shape({\r\n        create: yup.array().of(\r\n          yup.object().shape({\r\n            name: yup.string().required(\"*Maydon to'ldirilishi kerak\"),\r\n            price: yup\r\n              .number()\r\n              .required(\"*Maydon sonlar bilan to'ldirilishi kerak\"),\r\n            desc: yup.object().shape({\r\n              Uz: yup.object(),\r\n              Ru: yup.object(),\r\n            }),\r\n            imgUrl: yup.array().nullable(),\r\n            teacherId: yup.string().required(\"*Maydon to'ldirilishi kerak\"),\r\n          }),\r\n        ),\r\n      }),\r\n    ];\r\n  } else if (pageName === 'admins') {\r\n    return [\r\n      {\r\n        adminName: '',\r\n        password: '',\r\n      },\r\n      yup.object().shape({\r\n        create: yup.array().of(\r\n          yup.object().shape({\r\n            adminName: yup.string().required(\"*Maydon to'ldirilishi kerak\"),\r\n            password: yup.string().required(\"*Maydon to'ldirilishi kerak\"),\r\n          }),\r\n        ),\r\n      }),\r\n    ];\r\n  } else if (pageName == 'results') {\r\n    return [\r\n      {\r\n        fullname: '',\r\n        year: '',\r\n        university: '',\r\n        points: '',\r\n        status: '',\r\n      },\r\n      yup.object().shape({\r\n        create: yup.array().of(\r\n          yup.object().shape({\r\n            fullname: yup.string().required(\"*Maydon to'ldirilishi kerak\"),\r\n            year: yup.number().required(\"*Maydon to'ldirilishi kerak\"),\r\n            university: yup.string().required(\"Maydon to'ldirilishi shart\"),\r\n            status: yup.string().required(\"Maydon to'ldirilishi shart\"),\r\n            points: yup.number().required(\"*Maydon to'ldirilishi kerak\"),\r\n          }),\r\n        ),\r\n      }),\r\n    ];\r\n  }\r\n}\r\n\r\nexport default generateInitialValue;\r\n","import {Input} from 'antd';\r\nimport {Controller} from 'react-hook-form';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FormInput({\r\n  control,\r\n  placeholder,\r\n  error,\r\n  name,\r\n  defaultValue,\r\n  label = 'title',\r\n  ...others\r\n}) {\r\n  return (\r\n    <>\r\n      <Controller\r\n        control={control}\r\n        name={name}\r\n        defaultValue={defaultValue}\r\n        render={({field}) => (\r\n          <>\r\n            <label\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                margin: '10px 0',\r\n              }}>\r\n              <span>{label}</span>\r\n              <Input\r\n                {...field}\r\n                placeholder={placeholder}\r\n                defaultValue={defaultValue}\r\n              />\r\n              {error && (\r\n                <p style={{fontSize: '12px', color: 'red'}}>{error?.message}</p>\r\n              )}\r\n            </label>\r\n          </>\r\n        )}\r\n        {...others}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormInput;\r\n\r\nFormInput.propTypes = {\r\n  control: PropTypes.any,\r\n  placeholder: PropTypes.any,\r\n  error: PropTypes.any,\r\n  name: PropTypes.any,\r\n  defaultValue: PropTypes.any,\r\n  label: PropTypes.any,\r\n};\r\n","import {Input} from 'antd';\r\nimport InputMask from 'react-input-mask';\r\nimport {Controller} from 'react-hook-form';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FormPhone({\r\n  control,\r\n  placeholder,\r\n  error,\r\n  name,\r\n  defaultValue,\r\n  label,\r\n  ...others\r\n}) {\r\n  return (\r\n    <Controller\r\n      control={control}\r\n      name={name}\r\n      defaultValue={defaultValue}\r\n      render={({field}) => (\r\n        <>\r\n          <label\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              margin: '10px 0',\r\n            }}>\r\n            <span>{label}</span>\r\n            <InputMask\r\n              {...field}\r\n              mask='+(\\9\\98) 99 999 9999'\r\n              defaultValue={defaultValue}\r\n              placeholder={placeholder}>\r\n              {(inputProps) => <Input {...inputProps} />}\r\n            </InputMask>\r\n            {error && (\r\n              <p style={{fontSize: '12px', color: 'red'}}>{error?.message}</p>\r\n            )}\r\n          </label>\r\n        </>\r\n      )}\r\n      {...others}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FormPhone;\r\n\r\nFormPhone.propTypes = {\r\n  control: PropTypes.any,\r\n  placeholder: PropTypes.any,\r\n  error: PropTypes.any,\r\n  name: PropTypes.any,\r\n  defaultValue: PropTypes.any,\r\n  label: PropTypes.any,\r\n};\r\n","import {Select} from 'antd';\r\nimport {Controller} from 'react-hook-form';\r\nimport PropTypes from 'prop-types';\r\nimport {useGetData} from 'hooks';\r\n\r\nfunction FormSelect({\r\n  control,\r\n  placeholder,\r\n  error,\r\n  name,\r\n  defaultValue,\r\n  label = 'category',\r\n  ...others\r\n}) {\r\n  const {data} = useGetData('teachers/all');\r\n  const {Option} = Select;\r\n  return (\r\n    <>\r\n      <Controller\r\n        control={control}\r\n        name={name}\r\n        defaultValue={defaultValue}\r\n        render={({field}) => (\r\n          <>\r\n            <label\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                margin: '10px 0',\r\n              }}>\r\n              <span>{label}</span>\r\n              <Select\r\n                {...field}\r\n                placeholder={placeholder}\r\n                defaultValue={defaultValue}>\r\n                {data?.data?.data?.map((item, index) => (\r\n                  <Option key={index} value={item.teacher_id}>\r\n                    {item.teacher_name}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n              {error && (\r\n                <p style={{fontSize: '12px', color: 'red'}}>{error?.message}</p>\r\n              )}\r\n            </label>\r\n          </>\r\n        )}\r\n        {...others}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormSelect;\r\n\r\nFormSelect.propTypes = {\r\n  control: PropTypes.any,\r\n  placeholder: PropTypes.any,\r\n  error: PropTypes.any,\r\n  name: PropTypes.any,\r\n  defaultValue: PropTypes.any,\r\n  label: PropTypes.any,\r\n};\r\n","import {Controller} from 'react-hook-form';\r\nimport './styles.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FormUpload({control, register, error, name, defaultValue, ...others}) {\r\n  return (\r\n    <>\r\n      <Controller\r\n        control={control}\r\n        name={name}\r\n        defaultValue={defaultValue}\r\n        render={() => {\r\n          return (\r\n            <>\r\n              <label htmlFor='imageupload'>Select image</label>\r\n              <div className='create-upload'>\r\n                <input\r\n                  {...register('imgUrl')}\r\n                  type={'file'}\r\n                  name='imgUrl'\r\n                  accept={'image/*'}\r\n                  id='imageupload'\r\n                />\r\n              </div>\r\n              {error && (\r\n                <p style={{fontSize: '12px', color: 'red'}}>{error?.message}</p>\r\n              )}\r\n            </>\r\n          );\r\n        }}\r\n        {...others}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormUpload;\r\n\r\nFormUpload.propTypes = {\r\n  control: PropTypes.any,\r\n  error: PropTypes.any,\r\n  name: PropTypes.any,\r\n  label: PropTypes.any,\r\n  defaultValue: PropTypes.any,\r\n  register: PropTypes.any,\r\n};\r\n","import RichTextEditor from './RichTextEditor';\r\nimport FormInput from './FormInput';\r\nimport FormPhone from './FormPhone';\r\nimport FormSelect from './FormSelect';\r\nimport FormUpload from './FormUpload';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FormElements({type, ...others}) {\r\n  switch (type) {\r\n    case 'input':\r\n      return <FormInput {...others} />;\r\n    case 'editor':\r\n      return <RichTextEditor {...others} />;\r\n    case 'phone':\r\n      return <FormPhone {...others} />;\r\n    case 'upload':\r\n      return <FormUpload {...others} />;\r\n    case 'select':\r\n      return <FormSelect {...others} />;\r\n    default:\r\n      break;\r\n  }\r\n}\r\nexport default FormElements;\r\n\r\nFormElements.propTypes = {\r\n  type: PropTypes.string,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Tabs} from 'antd';\r\nimport {FrownOutlined} from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport FormElements from 'pages/dashboard/Components/FormElements';\r\n\r\nfunction ModalTabs({\r\n  isMultiNameArr,\r\n  languageTabs,\r\n  register,\r\n  error,\r\n  control,\r\n  index,\r\n  initialValue,\r\n}) {\r\n  const {TabPane} = Tabs;\r\n  const [tab, settab] = useState(languageTabs[0]);\r\n  function callback(key) {\r\n    settab(key);\r\n  }\r\n\r\n  const isAllErrorLang = (error, values, lang) => {\r\n    if (!error) return null;\r\n    let isErr = false;\r\n    for (const item of values) {\r\n      if (item.nameValue in error) {\r\n        error[item.nameValue][lang]\r\n          ? (isErr = true || isErr)\r\n          : (isErr = false || isErr);\r\n      }\r\n    }\r\n    return isErr;\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Tabs\r\n        defaultActiveKey={languageTabs[0]}\r\n        activeKey={tab}\r\n        onChange={callback}>\r\n        {languageTabs?.map((item) => (\r\n          <TabPane\r\n            tab={\r\n              <span>\r\n                {item === 'Uz' ? 'Uzbekcha' : 'Russian'}\r\n                <FrownOutlined\r\n                  hidden={\r\n                    error ? !isAllErrorLang(error, isMultiNameArr, item) : true\r\n                  }\r\n                  style={{color: 'red', marginLeft: '10px'}}\r\n                />\r\n              </span>\r\n            }\r\n            key={item}\r\n          />\r\n        ))}\r\n      </Tabs>\r\n\r\n      {languageTabs?.map((lang, key) => {\r\n        return (\r\n          <div style={tab !== lang ? {display: 'none'} : null} key={key}>\r\n            {isMultiNameArr?.map(({nameValue, type}, i) => (\r\n              <FormElements\r\n                key={i}\r\n                type={type}\r\n                control={control}\r\n                index={index}\r\n                error={error && error[nameValue]?.[lang]}\r\n                name={`create[${index}].${nameValue}.${lang}`}\r\n                register={register}\r\n                defaultValue={initialValue[nameValue]?.[lang]}\r\n                placeholder={nameValue}\r\n                label={nameValue}\r\n              />\r\n            ))}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalTabs;\r\n\r\nModalTabs.propTypes = {\r\n  isMultiNameArr: PropTypes.array,\r\n  languageTabs: PropTypes.array,\r\n  register: PropTypes.any,\r\n  error: PropTypes.object,\r\n  control: PropTypes.any,\r\n  index: PropTypes.number,\r\n  initialValue: PropTypes.object,\r\n};\r\n","import ModalTabs from '../ModalTabs';\r\nimport PropTypes from 'prop-types';\r\nimport FormElements from 'pages/dashboard/Components/FormElements';\r\nimport './styles.scss';\r\n\r\nconst FormFields = ({\r\n  remove,\r\n  register,\r\n  error,\r\n  control,\r\n  index,\r\n  initialValue,\r\n}) => {\r\n  let isMultiLanguage = false;\r\n  const isNameValue = () => {\r\n    let isValue = [];\r\n    let isMultiValues = [];\r\n    for (const key in initialValue) {\r\n      if (\r\n        typeof initialValue[key] === 'object' &&\r\n        'Uz' in initialValue[key] &&\r\n        'Ru' in initialValue[key]\r\n      ) {\r\n        isMultiLanguage = true;\r\n        let pushValue = {\r\n          type: 'editor',\r\n          nameValue: key,\r\n        };\r\n        isMultiValues.push(pushValue);\r\n      } else {\r\n        let pushValue = {\r\n          type:\r\n            key === 'phone'\r\n              ? 'phone'\r\n              : key.indexOf('img') === 0\r\n              ? 'upload'\r\n              : key === 'teacherId'\r\n              ? 'select'\r\n              : 'input',\r\n          nameValue: key,\r\n        };\r\n        isValue.push(pushValue);\r\n      }\r\n    }\r\n    return [isValue, isMultiValues];\r\n  };\r\n\r\n  const [isNameArr, isMultiNameArr] = isNameValue();\r\n\r\n  return (\r\n    <div className='create-modal-fields'>\r\n      {isMultiNameArr ? (\r\n        <ModalTabs\r\n          isMultiNameArr={isMultiNameArr}\r\n          languageTabs={isMultiLanguage ? ['Uz', 'Ru'] : ['Uz']}\r\n          remove={remove}\r\n          register={register}\r\n          error={error}\r\n          control={control}\r\n          index={index}\r\n          initialValue={initialValue}\r\n        />\r\n      ) : null}\r\n\r\n      {isNameArr?.map(({type, nameValue}, key) => (\r\n        <FormElements\r\n          key={key}\r\n          type={type}\r\n          control={control}\r\n          index={index}\r\n          error={error && error[nameValue]}\r\n          name={`create[${index}].${nameValue}`}\r\n          register={register}\r\n          defaultValue={initialValue[nameValue]}\r\n          placeholder={nameValue}\r\n          label={nameValue}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormFields;\r\n\r\nFormFields.propTypes = {\r\n  type: PropTypes.string,\r\n  remove: PropTypes.any,\r\n  register: PropTypes.any,\r\n  error: PropTypes.object,\r\n  control: PropTypes.any,\r\n  index: PropTypes.number,\r\n  initialValue: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport {BsX} from 'react-icons/bs';\r\nimport styles from './customModal.module.scss';\r\n\r\nfunction CustomModal({\r\n  visible,\r\n  width,\r\n  title,\r\n  onCancel,\r\n  footer,\r\n  children,\r\n  ...others\r\n}) {\r\n  return (\r\n    <>\r\n      {visible ? (\r\n        <div className={styles['custom-modal']} {...others}>\r\n          <div\r\n            className={styles['custom-modal__wrapper']}\r\n            style={{width: `${width}px`}}>\r\n            <div className={styles['custom-modal__wrapper__header']}>\r\n              <h2 className={styles['title']}>{title}</h2>\r\n              <button onClick={onCancel} className={styles['button']}>\r\n                <BsX />\r\n              </button>\r\n            </div>\r\n            <div className={styles['custom-modal__wrapper__body']}>\r\n              {children}\r\n            </div>\r\n            <div className={styles['custom-modal__wrapper__footer']}>\r\n              {footer}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomModal;\r\n\r\nCustomModal.propTypes = {\r\n  visible: PropTypes.bool,\r\n  width: PropTypes.number,\r\n  title: PropTypes.string,\r\n  onCancel: PropTypes.func,\r\n  footer: PropTypes.any,\r\n  children: PropTypes.any,\r\n};\r\n","import React, {useEffect, useRef, memo} from 'react';\r\nimport {Button} from 'antd';\r\nimport {useForm, useFieldArray} from 'react-hook-form';\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport FormFields from '../ModalFields';\r\nimport PropTypes from 'prop-types';\r\nimport CustomModal from '../CustomModal';\r\nimport './styles.scss';\r\n\r\nfunction GenerateModalForm({\r\n  type,\r\n  visible,\r\n  onCancel,\r\n  initialValue,\r\n  schema,\r\n  onSubmit,\r\n  isLoading,\r\n}) {\r\n  const refFrom = useRef();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    reset,\r\n    formState: {errors},\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const {fields, append, remove} = useFieldArray({\r\n    control,\r\n    name: 'create',\r\n  });\r\n\r\n  const handleOk = () => {\r\n    refFrom.current?.click();\r\n  };\r\n  const handleCancel = () => {\r\n    onCancel();\r\n  };\r\n  useEffect(() => {\r\n    append(initialValue);\r\n  }, []);\r\n\r\n  return (\r\n    <div className='generate-modal-form'>\r\n      <CustomModal\r\n        visible={visible}\r\n        title={type === 'create' ? 'Create Modal' : 'Edit Modal'}\r\n        onCancel={onCancel}\r\n        width={1000}\r\n        footer={\r\n          <div className='create-modal-form-footer'>\r\n            <div className='create-modal-form-action-btn'>\r\n              <Button key='back' onClick={handleCancel}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                key='submit'\r\n                type='primary'\r\n                loading={isLoading}\r\n                onClick={handleOk}>\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        }>\r\n        <form\r\n          onSubmit={handleSubmit((data) => {\r\n            onSubmit(data, reset);\r\n          })}\r\n          className='create-modal-form-scrollbar'>\r\n          <ul>\r\n            {fields?.map((item, index) => (\r\n              <li key={item.id} className='create-modal-form-box'>\r\n                <FormFields\r\n                  type={type}\r\n                  item={item}\r\n                  index={index}\r\n                  remove={remove}\r\n                  control={control}\r\n                  error={errors['create']?.[index]}\r\n                  register={register}\r\n                  initialValue={initialValue}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <input type='submit' hidden={true} ref={refFrom} />\r\n        </form>\r\n      </CustomModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(GenerateModalForm);\r\n\r\nGenerateModalForm.propTypes = {\r\n  type: PropTypes.string,\r\n  visible: PropTypes.bool,\r\n  onCancel: PropTypes.any,\r\n  initialValue: PropTypes.object,\r\n  schema: PropTypes.object,\r\n  onSubmit: PropTypes.any,\r\n  isLoading: PropTypes.bool,\r\n};\r\n","import React, {useState} from 'react';\r\nimport GenerateModalForm from './components/GenerateModalForm';\r\nimport {AiOutlineEdit} from 'react-icons/ai';\r\nimport {Button} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport './index.styles.scss';\r\n\r\nfunction ModalForm({type, ...others}) {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      {type === 'create' ? (\r\n        <Button\r\n          type='primary'\r\n          style={{width: '140px', maxWidth: '50%'}}\r\n          onClick={() => {\r\n            setVisible(true);\r\n          }}>\r\n          Create\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          type='link'\r\n          onClick={() => {\r\n            setVisible(true);\r\n          }}>\r\n          <AiOutlineEdit style={{fontSize: '1.3em'}} />\r\n        </Button>\r\n      )}\r\n      <GenerateModalForm\r\n        visible={visible}\r\n        type={type}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n        }}\r\n        {...others}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalForm;\r\n\r\nModalForm.propTypes = {\r\n  type: PropTypes.string,\r\n};\r\n","import AppPageMetadata from '@crema/core/AppPageMetadata';\r\nimport React from 'react';\r\nimport {DynamicTable} from '../Components';\r\nimport {message, Space} from 'antd';\r\nimport ModalForm from '../Components/ModalForm';\r\nimport generate from '../Components/Table/generate';\r\nimport {usePostData} from 'hooks';\r\n\r\nconst Admins = () => {\r\n  const {mutateAsync} = usePostData('admins');\r\n  const handleSubmit = async (data, reset) => {\r\n    await mutateAsync(data.create[0])\r\n      .then((res) => {\r\n        message.success(res.message);\r\n        reset();\r\n      })\r\n      .catch(() => message.error('Xatolik mavjud'));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppPageMetadata title='Admins' />\r\n      <Space size={'middle'} direction='vertical'>\r\n        <ModalForm\r\n          type='create'\r\n          initialValue={generate('admins')[0]}\r\n          schema={generate('admins')[1]}\r\n          onSubmit={handleSubmit}\r\n          isLoading={false}\r\n        />\r\n        <DynamicTable routeForData='admins' deleteKey='admins' />\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admins;\r\n"],"sourceRoot":""}