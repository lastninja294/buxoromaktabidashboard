{"version":3,"sources":["pages/profile/UserProfile/PersonalInfo/index.js","pages/profile/UserProfile/ChangePassword/index.js","pages/profile/UserProfile/index.js"],"names":["PersonalInfo","user","useAuthUser","onFinish","values","console","log","initialValues","userImage","photoURL","gutter","xs","md","Item","name","rules","required","message","placeholder","shouldUpdate","className","type","htmlType","ChangePassword","remember","onFinishFailed","errorInfo","IntlMessages","id","Password","getFieldValue","validator","rule","value","Promise","reject","resolve","UserProfile","TabPane","Tabs","defaultActiveKey","tabPosition","tab"],"mappings":"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","file":"static/js/19.63475bc9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Form, Col, Input, Button} from 'antd';\r\nimport {AppRowContainer} from '../../../../@crema';\r\n// import {useDropzone} from 'react-dropzone';\r\nimport {useAuthUser} from '../../../../@crema/utility/AuthHooks';\r\nimport './index.style.less';\r\n\r\nconst PersonalInfo = () => {\r\n  const {user} = useAuthUser();\r\n\r\n  // const [userImage, setUserImage] = useState('/assets/images/placeholder.jpg');\r\n\r\n  const onFinish = (values) => {\r\n    console.log('Finish:', values);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onFinish={onFinish}\r\n      initialValues={{\r\n        ...user,\r\n        userImage: user.photoURL\r\n          ? user.photoURL\r\n          : '/assets/images/placeholder.jpg',\r\n      }}>\r\n      <AppRowContainer gutter={16}>\r\n        <Col xs={24} md={16}>\r\n          <Form.Item\r\n            name='admin_name'\r\n            rules={[{required: true, message: 'Please input your Full Name!'}]}>\r\n            <Input placeholder='Full Name' />\r\n          </Form.Item>\r\n        </Col>\r\n\r\n        <Col xs={24} md={24}>\r\n          <Form.Item shouldUpdate className='user-profile-group-btn'>\r\n            <Button type='primary' htmlType='submit'>\r\n              Save Changes\r\n            </Button>\r\n            <Button htmlType='cancel'>Cancel</Button>\r\n          </Form.Item>\r\n        </Col>\r\n      </AppRowContainer>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PersonalInfo;\r\n","import React from 'react';\r\nimport {Button, Col, Form, Input} from 'antd';\r\nimport {AppRowContainer} from '../../../../@crema';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\n\r\nconst ChangePassword = () => {\r\n  const onFinish = (values) => {\r\n    console.log('Success:', values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      className='user-profile-form'\r\n      initialValues={{remember: true}}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}>\r\n      <h3 className='user-profile-form-title'>\r\n        <IntlMessages id='userProfile.changePassword' />\r\n      </h3>\r\n      <AppRowContainer gutter={16}>\r\n        <Col xs={24} md={16}>\r\n          <Form.Item\r\n            name='oldPassword'\r\n            rules={[\r\n              {required: true, message: 'Please input your Enter Password'},\r\n            ]}>\r\n            <Input.Password placeholder='Enter password' />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24} md={16} />\r\n        <Col xs={24} md={16}>\r\n          <Form.Item\r\n            name='password'\r\n            rules={[\r\n              {required: true, message: 'Please input your New Password!'},\r\n            ]}>\r\n            <Input.Password placeholder='Enter new password' />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24} md={16}>\r\n          <Form.Item\r\n            name='confirmPassword'\r\n            rules={[\r\n              {required: true, message: 'Please input Your Confirm Password!'},\r\n              ({getFieldValue}) => ({\r\n                validator(rule, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(\r\n                    'The Confirm Password that you entered do not match!',\r\n                  );\r\n                },\r\n              }),\r\n            ]}>\r\n            <Input.Password placeholder='Confirm new password' />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24} md={24}>\r\n          <Form.Item shouldUpdate className='user-profile-group-btn'>\r\n            <Button type='primary' htmlType='submit'>\r\n              Save Changes\r\n            </Button>\r\n            <Button htmlType='cancel'>Cancel</Button>\r\n          </Form.Item>\r\n        </Col>\r\n      </AppRowContainer>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React from 'react';\r\nimport './index.style.less';\r\nimport {Tabs} from 'antd';\r\nimport PersonalInfo from './PersonalInfo';\r\nimport ChangePassword from './ChangePassword';\r\n\r\nimport {HiUser} from 'react-icons/hi';\r\nimport {AiFillLock} from 'react-icons/ai';\r\n\r\n// import accountData from '../../../@crema/services/db/extraPages/account';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\n\r\nconst UserProfile = () => {\r\n  const TabPane = Tabs.TabPane;\r\n  return (\r\n    <div className='user-profile-container'>\r\n      <Tabs\r\n        className='user-profile-tabs'\r\n        defaultActiveKey='1'\r\n        tabPosition='left'>\r\n        <TabPane\r\n          tab={\r\n            <span className='user-profile-icon'>\r\n              <HiUser className='icon' />\r\n              <span>\r\n                <IntlMessages id='userProfile.personalInfo' />\r\n              </span>\r\n            </span>\r\n          }\r\n          key='1'>\r\n          <PersonalInfo />\r\n        </TabPane>\r\n        <TabPane\r\n          tab={\r\n            <span className='user-profile-icon'>\r\n              <AiFillLock className='icon' />\r\n              <span>\r\n                <IntlMessages id='userProfile.changePassword' />\r\n              </span>\r\n            </span>\r\n          }\r\n          key='2'>\r\n          <ChangePassword />\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"sourceRoot":""}